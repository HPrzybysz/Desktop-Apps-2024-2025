// dopisz do klasy punkt redefinicje dla operatora strumieniowania << dla cout
// zrdefeinicje operatora przypisania =
// zredefiniuj operator dodawania + aby moc zrobic Punkt c = a + b gdzie a->Punkt a i b->Punkt b
// zredefiniuj operator odejmowania - aby moc zrobic Punkt c = a - b gdzie a->Punkt a i b->Punkt b
// zredefiniuj operator iloczynu skalarnego * aby moc zrobic Punkt c = a * b gdzie a->Punkt a i b->Punkt b
// iloczyn skalarny wektorow -> mamy v1 i v2 (sa to wektory (2 isntancje klasy punkt)).
// v1 * v2 = |v1| * |v2| * cos(v1,v2)     v1 = [V1x,V1y]   v2 = [V2x,V2y]

	cos(v1,v2)=(v1*v2)/(|v1|*|v2|)

	v1*v2 = V1x*V2x+V1y*V2y

	|v1|-> dlugosc wektora (tu v1)


// policz dlugosc wektora w klasie punkt jako kolejna funckja


https://learn.microsoft.com/pl-pl/cpp/cpp/operator-overloading?view=msvc-170

WAZNE INFO W KURS_CPP LAB 31 (przeladowanie =) I 27 (przeladowanie <<)


Class Polygon
{

Punkt *vertice;
int count;

}

// funkcja obliczajaca pole wielokata (Polygon)
// zrob do tego pole trojkata z 6 liczb (x,y) (3x i czy 3y)
// sprawdzicz czy dowolny wielokat jest wypukly
// oblicz pole ograniczone brzegiem
// zaimplementuj konstrutkor kopiujacy oraz 'drukarke' (redefinicja strumieniowania <<)
// uzyj juz mozliwosci uzycia tego w klasie punkt
// dodaj mozliwosc spojzenia na obiekt jak na tablice (redefinicja [ ])
// ma dzialac jak ze stringami (z p.getVertice()[0] na p[0])


